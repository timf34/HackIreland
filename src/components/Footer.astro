---
import { Instagram, Linkedin, Mail } from 'lucide-react';
---

<footer class="footer">
    <div class="glitch-container">
        <div class="separator-line"></div>
        <div class="scan-line"></div>
        <div class="footer-content">
            <div class="social-links">
                <a href="https://www.instagram.com/hack.trinity/" target="_blank" rel="noopener noreferrer" class="social-link">
                    <Instagram className="icon" size={32} />
                </a>
                <a href="https://www.linkedin.com/company/hack-trinity/" target="_blank" rel="noopener noreferrer" class="social-link">
                    <Linkedin className="icon" size={32} />
                </a>
                <a href="mailto:team@hacktrinity.com" class="social-link">
                    <Mail className="icon" size={32} />
                </a>
            </div>
            <div class="credit">
                <span class="glitch-text" data-text="Made with ❤️ by the Hack Ireland Team">Made with ❤️ by the Hack Ireland Team</span>
            </div>
        </div>
    </div>
</footer>

<style>
    .footer {
        position: relative;
        width: 100vw;
        margin-left: calc(-50vw + 50%);
        margin-right: calc(-50vw + 50%);
        margin-top: 6rem;
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.5s ease, transform 0.5s ease;
        background: #13151a;
    }

    .footer.visible {
        opacity: 1;
        transform: translateY(0);
    }

    .separator-line {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 2px;
        background: linear-gradient(
                90deg,
                transparent,
                rgba(136, 58, 234, 0.8) 20%,
                rgba(136, 58, 234, 1) 50%,
                rgba(136, 58, 234, 0.8) 80%,
                transparent
        );
        box-shadow: 0 0 20px rgba(136, 58, 234, 0.4);
    }

    .glitch-container {
        position: relative;
        background: rgba(19, 21, 26, 0.95);
        backdrop-filter: blur(10px);
        padding: 3rem 0;
    }

    .scan-line {
        position: absolute;
        width: 100%;
        height: 8px;
        background: linear-gradient(
                to bottom,
                transparent,
                rgba(136, 58, 234, 0.2) 50%,
                transparent
        );
        animation: scan 3s linear infinite;
    }

    .footer-content {
        max-width: 800px;
        margin: 0 auto;
        padding: 0 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 2rem;
        height: 100%;
    }

    .social-links {
        display: flex;
        gap: 2rem;
        align-items: center;
    }

    .social-link {
        color: rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease;
        position: relative;
        padding: 0.5rem;
    }

    .social-link:hover {
        color: rgba(136, 58, 234, 1);
        transform: translateY(-2px);
    }

    .social-link::after {
        content: '';
        position: absolute;
        bottom: -5px;
        left: 0;
        width: 100%;
        height: 2px;
        background: rgba(136, 58, 234, 0.8);
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .social-link:hover::after {
        transform: scaleX(1);
    }

    .credit {
        color: rgba(255, 255, 255, 0.9);
        font-size: 1.1rem;
    }

    .glitch-text {
        position: relative;
        display: inline-block;
    }

    .glitch-text::before,
    .glitch-text::after {
        content: attr(data-text);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0.8;
    }

    .glitch-text::before {
        animation: glitch-1 3s infinite linear alternate-reverse;
        color: rgba(136, 58, 234, 0.8);
        clip: rect(44px, 450px, 56px, 0);
    }

    .glitch-text::after {
        animation: glitch-2 3s infinite linear alternate-reverse;
        color: rgba(255, 255, 255, 0.8);
        clip: rect(44px, 450px, 56px, 0);
    }

    @keyframes scan {
        0% {
            transform: translateY(-100%);
        }
        100% {
            transform: translateY(100vh);
        }
    }

    @keyframes glitch-1 {
        0% {
            clip: rect(20px, 450px, 28px, 0);
            transform: translate(-2px, 2px);
        }
        2% {
            clip: rect(20px, 450px, 28px, 0);
            transform: translate(2px, -2px);
        }
        4% {
            clip: rect(20px, 450px, 28px, 0);
            transform: translate(-1px, 1px);
        }
        6% {
            clip: rect(20px, 450px, 28px, 0);
            transform: translate(1px, -1px);
        }
        8% {
            clip: rect(20px, 450px, 28px, 0);
            transform: translate(-2px, 2px);
        }
        10% {
            clip: rect(20px, 450px, 28px, 0);
            transform: translate(0px, 0px);
        }
    }

    @keyframes glitch-2 {
        0% {
            clip: rect(12px, 450px, 20px, 0);
            transform: translate(-2px, -2px);
        }
        2% {
            clip: rect(12px, 450px, 20px, 0);
            transform: translate(2px, 2px);
        }
        4% {
            clip: rect(12px, 450px, 20px, 0);
            transform: translate(1px, -1px);
        }
        6% {
            clip: rect(12px, 450px, 20px, 0);
            transform: translate(-1px, 1px);
        }
        8% {
            clip: rect(12px, 450px, 20px, 0);
            transform: translate(2px, -2px);
        }
        10% {
            clip: rect(12px, 450px, 20px, 0);
            transform: translate(0px, 0px);
        }
    }

    @media (max-width: 640px) {
        .footer-content {
            flex-direction: column;
            text-align: center;
            gap: 2rem;
            padding: 0 1rem;
        }

        .footer {
            margin-top: 4rem;
        }
    }
</style>

<script>
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('visible');
            }
        });
    }, { threshold: 0.1 });

    const footer = document.querySelector('.footer');
    if (footer) {
        observer.observe(footer);
    }
</script>