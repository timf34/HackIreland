---
import ScrambleText from './ScrambleText.jsx';
import Modal from './Modal.astro';

const links = [
    {href: '/#about', text: '/about'},
    {href: '/#sponsors', text: '/sponsors'},
    {href: '/#faq', text: '/faq'},
    {href: '#', text: '/apply', isApply: true}, // Modified apply link
];

const currentPath = Astro.url.pathname;
---

<nav class="fixed z-50 w-full px-2 sm:px-4 pt-2 sm:pt-4" id="navbar">
    <div class="flex w-full max-w-6xl mx-auto flex-row items-center justify-between rounded-3xl border border-gray-700/50 bg-black/80 backdrop-blur-sm py-1 px-2 sm:px-4">
        <a href="/" class="flex items-center h-10 sm:h-14 pl-3 sm:pl-2">
            <img
                    src="/HackIreleandWhiteTransparent.svg"
                    alt="HackTrinity Logo"
                    class="h-8 sm:h-10 w-auto object-contain"
            />
        </a>
        <div class="flex items-center gap-3 sm:gap-28 ml-2 sm:ml-8">
            {links.map((link) => (
                    <a
                            href={link.href}
                            class:list={[
                                'page-link font-mono text-slate-400 no-underline underline-offset-2 hover:text-slate-200 hover:underline active:text-slate-300 text-xs sm:text-lg transition-colors duration-200',
                                {
                                    'text-white !underline': currentPath === link.href,
                                    'text-purple-400 hover:text-purple-300': link.isApply
                                }
                            ]}
                            onclick={link.isApply ? 'window.openModal(); return false;' : undefined}
                    >
                        <ScrambleText
                                text={link.text || link.href}
                                settings={{
                                    speed: 0.2,
                                    tick: 3,
                                    scramble: 8,
                                    seed: 1,
                                    chance: 0.8,
                                    playOnMount: false
                                }}
                                client:load
                        />
                    </a>
            ))}
        </div>
    </div>
</nav>
<Modal />
<div class="h-16"></div>

<style>
    .current-page {
        @apply text-white !underline;
    }
</style>

<!--Temp script for the modal which pops up to say applications not open yet, come back soon!-->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const applyLink = document.querySelector('a[href="#"]');
        if (applyLink) {
            applyLink.addEventListener('click', (e) => {
                e.preventDefault();
                window.openModal?.();
            });
        }
    });
</script>